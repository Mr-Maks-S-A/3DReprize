cmake_minimum_required(VERSION 4.0 FATAL_ERROR)

add_library(External INTERFACE)

option(INCLUDE_VULKAN   "Включение VUIKAN в проект"     OFF)
option(INCLUDE_OPENGL   "Включение Opengl в проект"     ON)


option(INCLUDE_GLFW     "Включение GLFW в проект"       ON)
option(INCLUDE_GLM      "Включение GLM в проект"        ON)
option(INCLUDE_ZLIB     "Включение ZLIB в проект"       ON)


#======================================Vulkan======================================
if(INCLUDE_VULKAN)
    find_package(Vulkan REQUIRED)
    target_link_libraries(External INTERFACE Vulkan::Vulkan)
endif()


#======================================OpenGL======================================
if(INCLUDE_OPENGL)
    find_package(OpenGL REQUIRED)
    target_link_libraries(External INTERFACE OpenGL::GL)

    #===================================GLAD===================================
    add_subdirectory("${CMAKE_SOURCE_DIR}/External/glad")  
    target_link_libraries(External INTERFACE glad)

endif()





#======================================GLFW======================================
if(INCLUDE_GLFW)
    if(WIN32)
        set(BUILD_SHARED_LIBS   OFF CACHE BOOL "Build shared libraries"  FORCE)
        set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "Build the GLFW example programs"  FORCE)
        set(GLFW_BUILD_TESTS    OFF CACHE BOOL "Build the GLFW test programs"  FORCE)
        set(GLFW_BUILD_DOCS     OFF CACHE BOOL "Build the GLFW documentation" FORCE)
        set(GLFW_INSTALL        OFF CACHE BOOL "Generate installation target" FORCE)

        add_subdirectory("${CMAKE_SOURCE_DIR}/External/glfw")  
        target_link_libraries(External INTERFACE glfw)
    endif()
endif()



#======================================GLM======================================
if(INCLUDE_GLM)
    if(WIN32)
            set(GLM_BUILD_LIBRARY       ON      CACHE BOOL "Build dynamic/static library"   FORCE)
            set(GLM_BUILD_TESTS         OFF     CACHE BOOL "Build the test programs"        FORCE)
            set(GLM_BUILD_INSTALL       OFF     CACHE BOOL "Generate the install target"    FORCE)

            set(GLM_ENABLE_CXX_98       OFF     CACHE BOOL "Enable C++ 98" FORCE)
            set(GLM_ENABLE_CXX_11       OFF     CACHE BOOL "Enable C++ 11" FORCE)
            set(GLM_ENABLE_CXX_14       OFF     CACHE BOOL "Enable C++ 14" FORCE)
            set(GLM_ENABLE_CXX_17       OFF      CACHE BOOL "Enable C++ 17" FORCE)
            set(GLM_ENABLE_CXX_20       ON     CACHE BOOL "Enable C++ 20" FORCE)

            set(GLM_ENABLE_SIMD_SSE2    ON      CACHE BOOL "Enable SSE2 optimizations"      FORCE)
            set(GLM_ENABLE_SIMD_SSE3    ON      CACHE BOOL "Enable SSE3 optimizations"      FORCE)
            set(GLM_ENABLE_SIMD_SSSE3   ON      CACHE BOOL "Enable SSSE3 optimizations"     FORCE)
            set(GLM_ENABLE_SIMD_SSE4_1  ON      CACHE BOOL "Enable SSE 4.1 optimizations"   FORCE)
            set(GLM_ENABLE_SIMD_SSE4_2  ON      CACHE BOOL "Enable SSE 4.2 optimizations"   FORCE)
            set(GLM_ENABLE_SIMD_AVX     ON      CACHE BOOL "Enable AVX optimizations"       FORCE)
            set(GLM_ENABLE_SIMD_AVX2    ON      CACHE BOOL "Enable AVX2 optimizations"      FORCE)
            set(GLM_ENABLE_SIMD_NEON    ON      CACHE BOOL "Enable ARM NEON optimizations"  FORCE)
            set(GLM_FORCE_PURE          ON      CACHE BOOL "Force 'pure' instructions"      FORCE)

        add_subdirectory("${CMAKE_SOURCE_DIR}/External/glm")  
        target_link_libraries(External INTERFACE glm::glm)
    endif()
endif()




#======================================ZLIB======================================
#ref: https://github.com/madler/zlib
if(INCLUDE_ZLIB)

    set(ZLIB_BUILD_TESTING    OFF   CACHE BOOL  "Enable Zlib Examples as tests"                                  FORCE)
    set(ZLIB_BUILD_SHARED     OFF   CACHE BOOL  "Enable building zlib shared library"                            FORCE)
    set(ZLIB_BUILD_STATIC     ON    CACHE BOOL  "Enable building zlib static library"                            FORCE)
    set(ZLIB_BUILD_MINIZIP    OFF   CACHE BOOL  "Enable building libminizip contrib library"                     FORCE)
    set(ZLIB_INSTALL          OFF   CACHE BOOL  "Enable installation of zlib"                                    FORCE)
    set(ZLIB_PREFIX           OFF   CACHE BOOL  "prefix for all types and library functions, see zconf.h.in"     FORCE)


    
    #ref: https://github.com/madler/zlib/wiki



    # Use EXCLUDE_FROM_ALL to prevent all targets from being added to the solution  
    add_subdirectory("${CMAKE_SOURCE_DIR}/External/zlib" EXCLUDE_FROM_ALL)

    target_link_libraries(External INTERFACE zlibstatic)    # Or "zlib" depending on whether or not you want the shared/static library
    # target_link_libraries(External INTERFACE zlib)

    #======================If you are using system libraries:======================

    # find_package(ZLIB REQUIRED)
    # target_link_libraries(External INTERFACE ZLIB::ZLIB)
    
endif()